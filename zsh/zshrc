# Initialisation
autoload -U colors && colors
PS1="%B%{$fg[white]%}[%{$fg[white]%}%n%{$fg[white]%}@%{$fg[white]%}%M %{$fg[cyan]%}%~%{$fg[white]%}]%{$reset_color%}$%b "

# Options
setopt share_history
setopt append_history
setopt autocd

# History
HISTSIZE=100000
SAVEHIST=100000
HISTFILE=~/.histfile

# Aliases
alias ls="ls --color=auto"
alias copy="pbcopy <"
alias diff="diff --color=auto"

# Environment Variables
export EDITOR="nvim"

# Tab Autocomplete
autoload -U compinit
zstyle ":completion:*" menu select
zmodload zsh/complist
compinit
_comp_options+=(globdots)

# Vim Bindings
bindkey -v
export KEYTIMEOUT=1

# Vim Bindings for Tab Autocomplete
# bindkey -M menuselect "h" vi-backward-char
# bindkey -M menuselect "k" vi-up-line-or-history
# bindkey -M menuselect "l" vi-forward-char
# bindkey -M menuselect "j" vi-down-line-or-history
# bindkey -v "^?" backward-delete-char

# Cursor Shape for Different Vim Modes 
function zle-keymap-select () {
    case $KEYMAP in
        vicmd) echo -ne "\e[1 q";;      # Block
        viins|main) echo -ne "\e[5 q";; # Beam
    esac
}

zle -N zle-keymap-select
zle-line-init() {
    zle -K viins                 # Initiate `vi insert` as Keymap (Can Be Removed if `bindkey -V` Has Been Set Elsewhere)
    echo -ne "\e[5 q"
}

zle -N zle-line-init
echo -ne "\e[5 q"                # Beam Shape Cursor on Startup
preexec() { echo -ne "\e[5 q" ;  # Beam Shape Cursor for Each New Prompt
}

# LF to Switch Directories (ctrl+o)
lfcd () {
    tmp="$(mktemp -uq)"
    trap "rm -f $tmp >/dev/null 2>&1 && trap - HUP INT QUIT TERM PWR EXIT" HUP INT QUIT TERM PWR EXIT
    lf -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
    fi
}

# Key Bindings
bindkey -s "^o" "^ulfcd\n"
bindkey -s "^f" "^ucd '$(dirname '$(fzf)')'\n"
bindkey "^[[3~" delete-char
bindkey "^[[1;5D" backward-word
bindkey "^[[1;5C" forward-word
bindkey "^a" beginning-of-line
bindkey "^l" end-of-line

# Edit Current Command in Text Editor (ctrl+e)
autoload edit-command-line; zle -N edit-command-line
bindkey "^e" edit-command-line
bindkey -M vicmd "^e" edit-command-line
bindkey -M visual "^[[3~" vi-delete
bindkey -M vicmd "^[[3~" vi-delete-char

# Plugins
source /opt/homebrew/Cellar/zsh-autosuggestions/0.7.0/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source /opt/homebrew/Cellar/zsh-syntax-highlighting/0.7.1/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
